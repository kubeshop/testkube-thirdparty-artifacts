def version_list():
  """
  Returns a list of Testkube versions pulled to local folder.
  """
  charts_list = local('ls -A ../charts | tr -d "tke-"')
  return str(charts_list).strip().split("\n")

def deploy_testkube_instances(version):
  """
  Deploys the Testkube and MongoDB instance using Helm charts into this folder.
  """
  print("Deploying Testkube version: %s" % version)
  testkube_namespace = """
kind: Namespace
apiVersion: v1
metadata:
  name: testkube-%s
  """ % version.replace(".", "-")
  print("Creating namespace: %s" % testkube_namespace)
  k8s_yaml([blob(testkube_namespace)])
  yaml = helm('../charts/tke-%s/testkube-enterprise' % version, name='testkube', namespace='testkube-%s' % version.replace(".", "-"), values='./values.demo.yaml')
  k8s_yaml(yaml)
  k8s_resource(workload='testkube-enterprise-ui', port_forwards=8080, labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-api', port_forwards=8090, labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-dex', port_forwards=5556, labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-minio', port_forwards=9000, labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-mongodb', labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-worker-service', labels='testkube-enterprise')
  k8s_resource(workload='testkube-enterprise-nats', labels='testkube-enterprise')
  k8s_resource(workload='testkube-api-server', labels='testkube-agent')
  k8s_resource(workload='testkube-nats', labels='testkube-agent')
  print("Deployed Testkube version: %s" % version)

[deploy_testkube_instances(version) for version in version_list()]

# docker_build(
#   'testkube/mongodb:8.0.15',
#   context='.',
#   dockerfile='mongo-8.dockerfile'
# )

# yaml = helm('./helm', name='mongodb', values='values.demo.yaml', set=[
#   'fullnameOverride=testkube-enterprise-mongodb',
#   'image.repository=testkube/mongodb:8.0.15',
#   'image.tag=8.0.15'
# ])

# k8s_yaml(yaml)
